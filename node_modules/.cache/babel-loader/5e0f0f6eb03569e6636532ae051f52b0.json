{"ast":null,"code":"var _jsxFileName = \"C:\\\\naxusTicaret\\\\naxus\\\\src\\\\Categories\\\\Products\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useReducer } from 'react';\nimport { CartReducer } from './CartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartContextProvider = props => {\n  _s();\n\n  const [cart, dispatch] = useReducer(CartReducer, {\n    shoppingCart: [],\n    totalPrice: 0,\n    totalQty: 0\n  });\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...cart,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 6\n  }, this);\n}; //Dispatch, gelen action'ı store'da mevcut state ile birlikte \n//reducer'a parametre geçer. Bu işlem sonucunda state'in ilgili \n//kısımları değişir ve yeni bir state oluşur.\n\n_s(CartContextProvider, \"90xjXgRQA+3Nh9s2IVJ+zBnJir8=\");\n\n_c = CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/naxusTicaret/naxus/src/Categories/Products/CartContext.jsx"],"names":["React","createContext","useReducer","CartReducer","CartContext","CartContextProvider","props","cart","dispatch","shoppingCart","totalPrice","totalQty","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAACH,aAAa,EAA/B;AAEP,OAAO,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE1C,QAAK,CAACC,IAAD,EAAMC,QAAN,IAAgBN,UAAU,CAACC,WAAD,EAAa;AAACM,IAAAA,YAAY,EAAC,EAAd;AAAiBC,IAAAA,UAAU,EAAC,CAA5B;AAA8BC,IAAAA,QAAQ,EAAC;AAAvC,GAAb,CAA/B;AACF,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAC,GAAGJ,IAAJ;AAASC,MAAAA;AAAT,KAA7B;AAAA,cACGF,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADH;AAKD,CARM,C,CAUP;AACA;AACA;;GAZaP,mB;;KAAAA,mB","sourcesContent":["import React,{createContext} from 'react';\r\nimport { useReducer } from 'react';\r\nimport { CartReducer } from './CartReducer';\r\n\r\nexport const CartContext=createContext();\r\n\r\nexport const CartContextProvider = (props) => {\r\n\r\n    const[cart,dispatch]=useReducer(CartReducer,{shoppingCart:[],totalPrice:0,totalQty:0})\r\n  return (\r\n     <CartContext.Provider value={{...cart,dispatch}}>\r\n       {props.children}\r\n     </CartContext.Provider>\r\n  );\r\n};\r\n\r\n//Dispatch, gelen action'ı store'da mevcut state ile birlikte \r\n//reducer'a parametre geçer. Bu işlem sonucunda state'in ilgili \r\n//kısımları değişir ve yeni bir state oluşur."]},"metadata":{},"sourceType":"module"}