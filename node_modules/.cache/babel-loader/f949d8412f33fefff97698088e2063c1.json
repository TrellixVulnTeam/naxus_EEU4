{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\Login\\\\LoginScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Divider, Grid, Segment } from \"semantic-ui-react\";\nimport Login from \"../Login/Login\";\nimport UyeOlYonlendirme from \"../Login/UyeOlYonlendirme\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const segmentdisayn = {\n    backgroundColor: \"#E0E0E0\"\n  };\n  const [user, setUser] = useState(\" \");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setPasswordError(\" \");\n    setEmailError(\" \");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    style: segmentdisayn,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(UyeOlYonlendirme, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          email: email,\n          setEmail: setEmail,\n          password: password,\n          setPassword: setPassword,\n          handleLogin: handleLogin,\n          handleSignup: handleSignup,\n          hasAccount: hasAccount,\n          setHasAccount: setHasAccount,\n          emailError: emailError,\n          passwordError: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      vertical: true,\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"Z81adlapFRMCHEAOn2+C1mrW8fs=\");\n\n_c = LoginScreen;\nexport default LoginScreen; // import React,{useState, useEffect} from \"react\";\n// import { auth } from \"../firebase\";\n// import Login from \"./Login\";\n// import Home from \"../pages/Home\";\n// import \"./LoginScreen\";\n// function LoginScreen() {\n//   const [user, setUser]=useState(null);\n//   useEffect(() => {\n//   auth.onAuthStateChanged((authUser) =>  //durum değişirse\n//   {\n//     if(authUser)//Doluysa siteye giriş yapabil\n//     {\n//       setUser(authUser) //giriş yapıldı yani login ekranına yönlendirildi.\n//     }else //değilse;\n//     {\n//       setUser(null) //giriş ekranında bekle\n//     }\n//   }) \n//   }, [])\n// /* console.log(user); */\n//   return (\n//     <div className=\"app\">\n//       {user ? <Home user={user}/> : <Login />} {/* /*setUser props olarak göndercem*/ }\n//     </div>\n//   );\n// }\n// export default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/Login/LoginScreen.jsx"],"names":["React","useEffect","useState","Divider","Grid","Segment","Login","UyeOlYonlendirme","firebase","LoginScreen","segmentdisayn","backgroundColor","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged","hasAccount","setHasAccount"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {  Divider, Grid, Segment} from \"semantic-ui-react\";\r\nimport Login from \"../Login/Login\";\r\nimport UyeOlYonlendirme from \"../Login/UyeOlYonlendirme\";\r\nimport firebase from \"firebase\";\r\n\r\n const LoginScreen = ()=> {\r\n  \r\n  const segmentdisayn=\r\n  {\r\n     backgroundColor:\"#E0E0E0\",\r\n  }\r\n  \r\n  const [user, setUser]=useState(\" \");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n\r\n\r\n  const clearInputs=()=>\r\n  {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n  const clearErrors=()=>\r\n  {\r\n    setPasswordError(\" \");\r\n    setEmailError(\" \");\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email,password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const handleSignup = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email,password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break; \r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const handleLogout=()=>\r\n  {\r\n   firebase.auth().signOut();\r\n  };\r\n\r\n\r\n\r\n  const authListener=()=>\r\n  {\r\n    firebase.auth().onAuthStateChanged((user)=>\r\n     {\r\n       if(user)\r\n       {\r\n         clearInputs();\r\n         setUser(user);\r\n       }else\r\n       {\r\n         setUser(\"\")\r\n       }\r\n     })\r\n  }\r\n\r\n  useEffect(()=>\r\n  {\r\n    authListener();\r\n  },[])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Segment style={segmentdisayn} >\r\n      <Grid columns={2} relaxed=\"very\">\r\n        <Grid.Column>\r\n           <UyeOlYonlendirme /> \r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Login \r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              handleLogin={handleLogin}\r\n              handleSignup={handleSignup}\r\n              hasAccount={hasAccount}\r\n              setHasAccount={setHasAccount}\r\n              emailError={emailError}\r\n              passwordError={passwordError}  /> \r\n        </Grid.Column>\r\n      </Grid>\r\n      <Divider vertical>Or</Divider>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\n// import React,{useState, useEffect} from \"react\";\r\n// import { auth } from \"../firebase\";\r\n// import Login from \"./Login\";\r\n// import Home from \"../pages/Home\";\r\n// import \"./LoginScreen\";\r\n\r\n// function LoginScreen() {\r\n//   const [user, setUser]=useState(null);\r\n\r\n//   useEffect(() => {\r\n//   auth.onAuthStateChanged((authUser) =>  //durum değişirse\r\n//   {\r\n//     if(authUser)//Doluysa siteye giriş yapabil\r\n//     {\r\n//       setUser(authUser) //giriş yapıldı yani login ekranına yönlendirildi.\r\n//     }else //değilse;\r\n//     {\r\n//       setUser(null) //giriş ekranında bekle\r\n//     }\r\n//   }) \r\n//   }, [])\r\n  \r\n// /* console.log(user); */\r\n//   return (\r\n//     <div className=\"app\">\r\n//       {user ? <Home user={user}/> : <Login />} {/* /*setUser props olarak göndercem*/ }\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n// export default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}