{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport database from \"../firebase\";\nimport firebase from \"firebase\";\nimport { Button } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  handleLogout\n}) => {\n  _s();\n\n  const [input, setinput] = useState(\"\");\n  const [values, setvalues] = useState([]);\n  useEffect(() => {\n    database.collection(\"users\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshop => setvalues(snapshop.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []);\n\n  function savetodatabase(value) {\n    preventDefault();\n    database.collection(\"users\").add({\n      name: value,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      surname: \"Aksu\"\n    });\n    setinput(\"\");\n  }\n\n  function deletedata(value) {\n    database.collection(\"users\").doc(value).delete();\n  }\n\n  function Editdata(id, value) {\n    database.collection(\"users\").doc(id).set({\n      name: value\n    }, {\n      merge: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [\"Ad :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setinput(e.target.input)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => savetodatabase(input),\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: values.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.data.name, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deletedata(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => Editdata(item.id, \"Hiçkimse\"),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        as: NavLink,\n        to: \"KayitOl\",\n        children: \"Kay\\u0131t Ol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"hOQea6cdxyAFlHdbPgoXWM4Hz/M=\");\n\n_c = Home;\nexport default Home; // import { useState } from \"react\";\n// import { Button } from \"semantic-ui-react\";\n// import database from '../firebase';\n// import firebase from \"firebase\";\n// import { useEffect } from \"react\";\n// import Users from '../Login/Users'\n//  function Home() \n//  {\n//   const [name, setName] = useState(\"\");\n//   const [surname, setSurname] = useState(\"\");\n//   const [users, setUsers] = useState([]);\n//   //onSnapshot: her satırı tek tek alıyor\n//   useEffect(() => {\n//     //veritabanından verileri çekiyor\n//     database.collection(\"users\").onSnapshot((snapshot) =>\n//       setUsers(\n//         snapshot.docs.map((doc) => ({\n//           id: doc.id,\n//           data: doc.data(),\n//         }))\n//       )\n//     );\n//   }, []); //boş dizi vermezsem,sürekli döner.\n//   console.log(users);\n//   console.log();\n//   const add = (e) => {\n//     e.preventDefault(); //sayfa yenilenmesin diye uaptık\n//     database.collection(\"users\").add({\n//       name: name,\n//       surname: surname,\n//       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n//     });\n//     setName(\"\");\n//     setSurname(\"\");\n//   };\n//   return (\n//     <div>\n//       <form>\n//          Ad :\n//         <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//           Soyad :\n//         <input\n//           type=\"text\"\n//           value={surname}\n//           onChange={(e) => setSurname(e.target.value)}\n//         />\n//         <Button onClick={add}>Ekle</Button>\n//       </form>\n//       <div>\n//         {users.map(({ id, data }) => (\n//           <Users\n//             key={id}\n//             id={id}\n//             name={data.name}\n//             surname={data.surname}\n//             guncellenenisim={name}\n//             guncellenensoyad={surname}\n//             setName={setName}\n//             setSurname={setSurname}\n//           />\n//         ))}\n//       </div>\n//       {/* <div>\n//         {users.map(({ id, data: { name, surname } }) => (\n//           <Users\n//             key={id}\n//             id={id}\n//             name={name}\n//             surname={surname}\n//             setName={setName}\n//             setSurname={setSurname}\n//           />\n//         ))}\n//       </div> */}\n//       {/* <div>\n//         {users.map((item) => (\n//           <ul>\n//             <li>\n//               {item.data.name} {item.data.surname}\n//             </li>\n//           </ul>\n//         ))}\n//       </div> */}\n//     </div>\n//   );\n// }\n// export default Home();\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/pages/Home.jsx"],"names":["React","useState","useEffect","database","firebase","Button","NavLink","Home","handleLogout","input","setinput","values","setvalues","collection","orderBy","onSnapshot","snapshop","docs","map","doc","id","data","savetodatabase","value","preventDefault","add","name","timestamp","firestore","FieldValue","serverTimestamp","surname","deletedata","delete","Editdata","set","merge","e","target","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport database  from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Home= ({handleLogout})=> {\r\n  const [input, setinput] = useState(\"\");\r\n  const [values, setvalues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    database\r\n      .collection(\"users\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshop) =>\r\n        setvalues(\r\n          snapshop.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  function savetodatabase(value) {\r\n    preventDefault();\r\n    database.collection(\"users\").add({\r\n      name: value,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      surname: \"Aksu\",\r\n    });\r\n    setinput(\"\");\r\n  }\r\n\r\n  function deletedata(value) {\r\n    database.collection(\"users\").doc(value).delete();\r\n  }\r\n\r\n  function Editdata(id,value) {\r\n    database.collection(\"users\").doc(id).set(\r\n      {\r\n        name:value,\r\n\r\n      },{merge:true}\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>Hoşgeldiniz {user.displayName}</h1> */}\r\n      {/* <button onClick={() => auth.signOut()}>Çıkış Yap </button> */}\r\n     <form action=\"\">\r\n       Ad :\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setinput(e.target.input)}\r\n        />\r\n      <button  onClick={() => savetodatabase(input)}>\r\n        Ekle\r\n      </button>\r\n      <div>\r\n        {values.map((item) => (\r\n          <ul>\r\n            <li>\r\n              {item.data.name}\r\n              <div>\r\n                <button onClick={() => deletedata(item.id)}>Delete</button>\r\n                <button onClick={() => Editdata(item.id,\"Hiçkimse\")}>Edit</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        ))}\r\n      </div>\r\n\r\n      <Button as={NavLink} to=\"KayitOl\">\r\n        Kayıt Ol \r\n      </Button>\r\n    <Button onClick={handleLogout}>Çıkış Yap</Button>\r\n    \r\n    </form>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { Button } from \"semantic-ui-react\";\r\n// import database from '../firebase';\r\n// import firebase from \"firebase\";\r\n// import { useEffect } from \"react\";\r\n// import Users from '../Login/Users'\r\n\r\n//  function Home() \r\n//  {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [surname, setSurname] = useState(\"\");\r\n//   const [users, setUsers] = useState([]);\r\n//   //onSnapshot: her satırı tek tek alıyor\r\n//   useEffect(() => {\r\n//     //veritabanından verileri çekiyor\r\n//     database.collection(\"users\").onSnapshot((snapshot) =>\r\n//       setUsers(\r\n//         snapshot.docs.map((doc) => ({\r\n//           id: doc.id,\r\n//           data: doc.data(),\r\n//         }))\r\n//       )\r\n//     );\r\n//   }, []); //boş dizi vermezsem,sürekli döner.\r\n\r\n//   console.log(users);\r\n\r\n//   console.log();\r\n//   const add = (e) => {\r\n//     e.preventDefault(); //sayfa yenilenmesin diye uaptık\r\n//     database.collection(\"users\").add({\r\n//       name: name,\r\n//       surname: surname,\r\n//       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n//     });\r\n//     setName(\"\");\r\n//     setSurname(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form>\r\n//          Ad :\r\n//         <input\r\n//           type=\"text\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n//           Soyad :\r\n//         <input\r\n//           type=\"text\"\r\n//           value={surname}\r\n//           onChange={(e) => setSurname(e.target.value)}\r\n//         />\r\n//         <Button onClick={add}>Ekle</Button>\r\n//       </form>\r\n\r\n//       <div>\r\n//         {users.map(({ id, data }) => (\r\n//           <Users\r\n//             key={id}\r\n//             id={id}\r\n//             name={data.name}\r\n//             surname={data.surname}\r\n//             guncellenenisim={name}\r\n//             guncellenensoyad={surname}\r\n//             setName={setName}\r\n//             setSurname={setSurname}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* <div>\r\n//         {users.map(({ id, data: { name, surname } }) => (\r\n//           <Users\r\n//             key={id}\r\n//             id={id}\r\n//             name={name}\r\n//             surname={surname}\r\n//             setName={setName}\r\n//             setSurname={setSurname}\r\n//           />\r\n//         ))}\r\n//       </div> */}\r\n\r\n//       {/* <div>\r\n//         {users.map((item) => (\r\n//           <ul>\r\n//             <li>\r\n//               {item.data.name} {item.data.surname}\r\n//             </li>\r\n//           </ul>\r\n//         ))}\r\n//       </div> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// export default Home();"]},"metadata":{},"sourceType":"module"}