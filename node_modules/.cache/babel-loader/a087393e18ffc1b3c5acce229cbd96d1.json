{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\Login\\\\KayitOl.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport database from \"../firebase\";\nimport { useEffect } from \"react\";\nimport Users from \"./Users\";\nimport { auth } from \"../firebase\";\nimport Home from \"../pages/Home\";\nimport LoginScreen from './LoginScreen';\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KayitOl() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState(\" \");\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => //durum değişirse\n    {\n      if (authUser) //Doluysa siteye giriş yapabil\n        {\n          setUser(authUser); //giriş yapıldı yani login ekranına yönlendirildi.\n        } else //değilse;\n        {\n          setUser(null); //giriş ekranında bekle\n        }\n    });\n  }, []); //onSnapshot: her satırı tek tek alıyor\n\n  useEffect(() => {\n    //veritabanından verileri çekiyor\n    database.collection(\"users\").onSnapshot(snapshot => setUsers(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []); //boş dizi vermezsem,sürekli döner.\n\n  console.log(users);\n  console.log();\n\n  const add = e => {\n    e.preventDefault(); //sayfa yenilenmesin diye uaptık\n\n    database.collection(\"users\").add({\n      name: name,\n      surname: surname,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setName(\"\");\n    setSurname(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Ad :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \"Soyad :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: surname,\n        onChange: e => setSurname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: add,\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [users.map(({\n        id,\n        data\n      }) => /*#__PURE__*/_jsxDEV(Users, {\n        id: id,\n        name: data.name,\n        surname: data.surname,\n        guncellenenisim: name,\n        guncellenensoyad: surname,\n        setName: setName,\n        setSurname: setSurname\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), user ? /*#__PURE__*/_jsxDEV(Home, {\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KayitOl, \"AhX8wTlvlA6dLrg25zYV03Yx7v8=\");\n\n_c = KayitOl;\nexport default KayitOl;\n\nvar _c;\n\n$RefreshReg$(_c, \"KayitOl\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/Login/KayitOl.jsx"],"names":["React","useState","Button","database","useEffect","Users","auth","Home","LoginScreen","firebase","KayitOl","name","setName","surname","setSurname","users","setUsers","user","setUser","handleLogout","signOut","onAuthStateChanged","authUser","collection","onSnapshot","snapshot","docs","map","doc","id","data","console","log","add","e","preventDefault","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAIA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAgBjB,QAAQ,CAAC,GAAD,CAA9B;;AAEA,QAAMkB,YAAY,GAAC,MACnB;AACCV,IAAAA,QAAQ,CAACH,IAAT,GAAgBc,OAAhB;AACA,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AAChBE,IAAAA,IAAI,CAACe,kBAAL,CAAyBC,QAAD,IAAe;AACvC;AACE,UAAGA,QAAH,EAAY;AACZ;AACEJ,UAAAA,OAAO,CAACI,QAAD,CAAP,CADF,CACoB;AACnB,SAHD,MAGM;AACN;AACEJ,UAAAA,OAAO,CAAC,IAAD,CAAP,CADF,CACgB;AACf;AACF,KATD;AAUC,GAXQ,EAWN,EAXM,CAAT,CAdiB,CA4BjB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACAD,IAAAA,QAAQ,CAACoB,UAAT,CAAoB,OAApB,EAA6BC,UAA7B,CAAyCC,QAAD,IACtCT,QAAQ,CACNS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1BC,MAAAA,EAAE,EAAED,GAAG,CAACC,EADkB;AAE1BC,MAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAFoB,KAAV,CAAlB,CADM,CADV;AAQD,GAVQ,EAUN,EAVM,CAAT,CA7BiB,CAuCT;;AAERC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AAEAgB,EAAAA,OAAO,CAACC,GAAR;;AACA,QAAMC,GAAG,GAAIC,CAAD,IAAO;AACjBA,IAAAA,CAAC,CAACC,cAAF,GADiB,CACG;;AACpBhC,IAAAA,QAAQ,CAACoB,UAAT,CAAoB,OAApB,EAA6BU,GAA7B,CAAiC;AAC/BtB,MAAAA,IAAI,EAAEA,IADyB;AAE/BE,MAAAA,OAAO,EAAEA,OAFsB;AAG/BuB,MAAAA,SAAS,EAAE3B,QAAQ,CAAC4B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHoB,KAAjC;AAKA3B,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA,sCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEH,IAFT;AAGE,QAAA,QAAQ,EAAGuB,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACM,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cAFF,0BAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE5B,OAFT;AAGE,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,UAAU,CAACoB,CAAC,CAACM,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,cARF,eAaE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAER,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA,iBACGlB,KAAK,CAACY,GAAN,CAAU,CAAC;AAAEE,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,kBACT,QAAC,KAAD;AAEE,QAAA,EAAE,EAAED,EAFN;AAGE,QAAA,IAAI,EAAEC,IAAI,CAACnB,IAHb;AAIE,QAAA,OAAO,EAAEmB,IAAI,CAACjB,OAJhB;AAKE,QAAA,eAAe,EAAEF,IALnB;AAME,QAAA,gBAAgB,EAAEE,OANpB;AAOE,QAAA,OAAO,EAAED,OAPX;AAQE,QAAA,UAAU,EAAEE;AARd,SACOe,EADP;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAcIZ,IAAI,gBAAK,QAAC,IAAD;AAAM,QAAA,YAAY,EAAGE;AAArB;AAAA;AAAA;AAAA;AAAA,cAAL,gBAAgD,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAdxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GApHQT,O;;KAAAA,O;AAsHT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport database from \"../firebase\";\r\nimport { useEffect } from \"react\";\r\nimport Users from \"./Users\";\r\nimport { auth } from \"../firebase\";\r\nimport Home from \"../pages/Home\";\r\nimport LoginScreen from './LoginScreen';\r\nimport firebase from \"firebase\";\r\n\r\nfunction KayitOl() {\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n\r\n\r\n  const [user, setUser]=useState(\" \");\r\n\r\n  const handleLogout=()=>\r\n  {\r\n   firebase.auth().signOut();\r\n  }\r\n\r\n  useEffect(() => {\r\n  auth.onAuthStateChanged((authUser) =>  //durum değişirse\r\n  {\r\n    if(authUser)//Doluysa siteye giriş yapabil\r\n    {\r\n      setUser(authUser) //giriş yapıldı yani login ekranına yönlendirildi.\r\n    }else //değilse;\r\n    {\r\n      setUser(null) //giriş ekranında bekle\r\n    }\r\n  }) \r\n  }, [])\r\n\r\n\r\n  //onSnapshot: her satırı tek tek alıyor\r\n  useEffect(() => {\r\n    //veritabanından verileri çekiyor\r\n    database.collection(\"users\").onSnapshot((snapshot) =>\r\n      setUsers(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n  }, []); //boş dizi vermezsem,sürekli döner.\r\n\r\n  console.log(users);\r\n\r\n  console.log();\r\n  const add = (e) => {\r\n    e.preventDefault(); //sayfa yenilenmesin diye uaptık\r\n    database.collection(\"users\").add({\r\n      name: name,\r\n      surname: surname,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setName(\"\");\r\n    setSurname(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        Ad :\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        Soyad :\r\n        <input\r\n          type=\"text\"\r\n          value={surname}\r\n          onChange={(e) => setSurname(e.target.value)}\r\n        />\r\n        <Button onClick={add}>Ekle</Button>\r\n      </form>\r\n\r\n      <div>\r\n        {users.map(({ id, data }) => (\r\n          <Users\r\n            key={id}\r\n            id={id}\r\n            name={data.name}\r\n            surname={data.surname}\r\n            guncellenenisim={name}\r\n            guncellenensoyad={surname}\r\n            setName={setName}\r\n            setSurname={setSurname}\r\n          />\r\n        ))}\r\n        {\r\n          user ? ( <Home handleLogout ={handleLogout}/> ) : ( <LoginScreen/>)\r\n        }\r\n         \r\n      </div>\r\n\r\n      {/* <div>\r\n        {users.map(({ id, data: { name, surname } }) => (\r\n          <Users\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            surname={surname}\r\n            setName={setName}\r\n            setSurname={setSurname}\r\n          />\r\n        ))}\r\n      </div> */}\r\n\r\n      {/* <div>\r\n        {users.map((item) => (\r\n          <ul>\r\n            <li>\r\n              {item.data.name} {item.data.surname}\r\n            </li>\r\n          </ul>\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KayitOl;\r\n"]},"metadata":{},"sourceType":"module"}