{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\Categories\\\\Products\\\\AddProducts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport database, { storage } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddProducts = () => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\");\n\n  function handleChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function handleUpload(e) {\n    e.preventDefault();\n    const ref = storage.ref(`product-images/${productImg.name}`);\n    const uploadTask = ref.put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      ref.getDownloadURL().then(url => {\n        setFile(null);\n        setURL(url);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !file,\n        children: \"upload to firebase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n  /* \r\n      const[productName, setProductName]= useState(\"\");\r\n      const[productPrice, setProductPrice]=useState(0);\r\n      const[productImg, setProductImg]=useState(null);\r\n      const[error, setError]=useState(\"\");\r\n      \r\n  \r\n      const types = ['image/png', 'image/jpeg'];\r\n  \r\n      //product image handler\r\n     const productImgHandler=(e)=>\r\n     {\r\n         let selectedFile=e.target.files[0];\r\n         if(selectedFile && types.includes(selectedFile.type))\r\n         {\r\n             setProductImg(selectedFile);\r\n             setError(\"\");\r\n         }else{\r\n             setProductImg(null);\r\n             setError(\"Lütfen geçerli formatta resim ekleyiniz (jpeg,png) \")\r\n         }\r\n     }\r\n  \r\n   \r\n     //Add product form submit event\r\n     const addProduct=(e)=>{\r\n         e.preventDefault();//sayfanın yenilenmesini engelledi\r\n         //storing the image\r\n          const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\r\n          uploadTask.on('state_changed',snapshot=>{\r\n              const progress=(snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n              console.log(progress);\r\n          },err=>{\r\n              setError(err.message)\r\n          },()=>{\r\n              //getting product url and if success then storing the product in database\r\n              storage.ref('product-images').child(productImg.name).getDownloadURL().then(url=>\r\n                  {\r\n                      database.collection('Products').add({\r\n                          ProductImg:url,\r\n                          ProductName:productName,\r\n                          ProductPrice:Number(productPrice),\r\n                      }).then(()=>\r\n                      {\r\n                          setProductName('');\r\n                          setProductPrice(0);\r\n                          setProductImg('');\r\n                          setError('');\r\n                          document.getElementById('file').value=''\r\n                      }).catch(err=>setError(err.message));\r\n                  })\r\n          })\r\n     }\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n        <h2>ADD PRODUCTS</h2>\r\n        <hr />\r\n  \r\n        <form autoComplete=\"off\" className=\"form-group\" onSubmit={addProduct} >\r\n            <label htmlFor=\"product-name\">Product Name</label>\r\n             <br />\r\n             <input type=\"text\" className=\"form-control\" required \r\n                 onChange={(e)=>setProductName(e.target.value)} \r\n                 value={productName}\r\n              />\r\n             <br />\r\n             <label htmlFor=\"product-price\">Product Price</label>\r\n             <br />\r\n             <input type=\"number\" className=\"form-control\" required \r\n                 onChange={(e)=>setProductPrice(e.target.value)}\r\n                 value={productPrice}   \r\n              />\r\n             <br />\r\n             <label htmlFor=\"product-img\">Product Image</label>\r\n             <br />\r\n             <input type=\"file\" className=\"form-control\" onChange={productImgHandler} id='file' />\r\n             <br />\r\n             <button className=\"btn btn-success btn-md my btn\">ADD</button>\r\n        </form>\r\n        {error && <span>{error}</span>}\r\n  \r\n      </div>\r\n    ); */\n};\n\n_s(AddProducts, \"hEh0J3SnJJE/ANDurQdKwWgn15o=\");\n\n_c = AddProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProducts\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/Categories/Products/AddProducts.jsx"],"names":["React","useState","database","storage","AddProducts","file","setFile","url","setURL","handleChange","e","target","files","handleUpload","preventDefault","ref","productImg","name","uploadTask","put","on","console","log","error","getDownloadURL","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,IAAmBC,OAAnB,QAAkC,gBAAlC;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAG7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;;AAEA,WAASQ,YAAT,CAAsBC,CAAtB,EAAyB;AACvBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACD;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,GAAG,GAAGZ,OAAO,CAACY,GAAR,CAAa,kBAAiBC,UAAU,CAACC,IAAK,EAA9C,CAAZ;AACA,UAAMC,UAAU,GAAGH,GAAG,CAACI,GAAJ,CAAQd,IAAR,CAAnB;AACAa,IAAAA,UAAU,CAACE,EAAX,CAAc,eAAd,EAA+BC,OAAO,CAACC,GAAvC,EAA4CD,OAAO,CAACE,KAApD,EAA2D,MAAM;AAC/DR,MAAAA,GAAG,CACAS,cADH,GAEGC,IAFH,CAESlB,GAAD,IAAS;AACbD,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,QAAAA,MAAM,CAACD,GAAD,CAAN;AACD,OALH;AAMD,KAPD;AAQD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,QAAQ,EAAE,CAACJ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,GAAG,EAAEE,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAtHM;;GAAMH,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport database, { storage } from \"../../firebase\";\r\n\r\nexport const AddProducts = () => {\r\n\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [url, setURL] = useState(\"\");\r\n  \r\n    function handleChange(e) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  \r\n    function handleUpload(e) {\r\n      e.preventDefault();\r\n      const ref = storage.ref(`product-images/${productImg.name}`);\r\n      const uploadTask = ref.put(file);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        ref\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setFile(null);\r\n            setURL(url);\r\n          });\r\n      });\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <form onSubmit={handleUpload}>\r\n          <input type=\"file\" onChange={handleChange} />\r\n          <button disabled={!file}>upload to firebase</button>\r\n        </form>\r\n        <img src={url} alt=\"\" />\r\n      </div>\r\n    );\r\n/* \r\n    const[productName, setProductName]= useState(\"\");\r\n    const[productPrice, setProductPrice]=useState(0);\r\n    const[productImg, setProductImg]=useState(null);\r\n    const[error, setError]=useState(\"\");\r\n    \r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    //product image handler\r\n   const productImgHandler=(e)=>\r\n   {\r\n       let selectedFile=e.target.files[0];\r\n       if(selectedFile && types.includes(selectedFile.type))\r\n       {\r\n           setProductImg(selectedFile);\r\n           setError(\"\");\r\n       }else{\r\n           setProductImg(null);\r\n           setError(\"Lütfen geçerli formatta resim ekleyiniz (jpeg,png) \")\r\n       }\r\n   }\r\n\r\n \r\n   //Add product form submit event\r\n   const addProduct=(e)=>{\r\n       e.preventDefault();//sayfanın yenilenmesini engelledi\r\n       //storing the image\r\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\r\n        uploadTask.on('state_changed',snapshot=>{\r\n            const progress=(snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n            console.log(progress);\r\n        },err=>{\r\n            setError(err.message)\r\n        },()=>{\r\n            //getting product url and if success then storing the product in database\r\n            storage.ref('product-images').child(productImg.name).getDownloadURL().then(url=>\r\n                {\r\n                    database.collection('Products').add({\r\n                        ProductImg:url,\r\n                        ProductName:productName,\r\n                        ProductPrice:Number(productPrice),\r\n                    }).then(()=>\r\n                    {\r\n                        setProductName('');\r\n                        setProductPrice(0);\r\n                        setProductImg('');\r\n                        setError('');\r\n                        document.getElementById('file').value=''\r\n                    }).catch(err=>setError(err.message));\r\n                })\r\n        })\r\n   }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <h2>ADD PRODUCTS</h2>\r\n      <hr />\r\n\r\n      <form autoComplete=\"off\" className=\"form-group\" onSubmit={addProduct} >\r\n          <label htmlFor=\"product-name\">Product Name</label>\r\n           <br />\r\n           <input type=\"text\" className=\"form-control\" required \r\n               onChange={(e)=>setProductName(e.target.value)} \r\n               value={productName}\r\n            />\r\n           <br />\r\n           <label htmlFor=\"product-price\">Product Price</label>\r\n           <br />\r\n           <input type=\"number\" className=\"form-control\" required \r\n               onChange={(e)=>setProductPrice(e.target.value)}\r\n               value={productPrice}   \r\n            />\r\n           <br />\r\n           <label htmlFor=\"product-img\">Product Image</label>\r\n           <br />\r\n           <input type=\"file\" className=\"form-control\" onChange={productImgHandler} id='file' />\r\n           <br />\r\n           <button className=\"btn btn-success btn-md my btn\">ADD</button>\r\n      </form>\r\n      {error && <span>{error}</span>}\r\n\r\n    </div>\r\n  ); */\r\n};\r\n"]},"metadata":{},"sourceType":"module"}