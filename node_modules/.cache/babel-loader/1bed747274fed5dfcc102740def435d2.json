{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\Login\\\\LoginAndS\\u0130gnUpPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport Home from \"../pages/Home\";\nimport LoginScreen from './LoginScreen';\nimport firebase from \"firebase\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginAndSİgnUpPage() {\n  _s();\n\n  const [user, setUser] = useState(\" \");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => //durum değişirse\n    {\n      if (authUser) //Doluysa siteye giriş yapabil\n        {\n          setUser(authUser); //giriş yapıldı yani login ekranına yönlendirildi.\n        } else //değilse;\n        {\n          setUser(null); //giriş ekranında bekle\n        }\n    });\n  }, []);\n\n  const clearInputs = () => {\n    setEmail = \"\";\n    setPassword = \"\";\n  };\n\n  const clearErrors = () => {\n    setPasswordError = \"\";\n    setEmailError = \"\";\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email.password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email.password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  /* console.log(user); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignup: handleSignup,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), \"j\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginAndSİgnUpPage, \"u94cXEhDjf7Kec1IpfGDeVkZHlQ=\");\n\n_c = LoginAndSİgnUpPage;\nexport default LoginAndSİgnUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginAndS\\u0130gnUpPage\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/Login/LoginAndSİgnUpPage.jsx"],"names":["React","useState","useEffect","auth","Home","LoginScreen","firebase","Login","LoginAndSİgnUpPage","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","onAuthStateChanged","authUser","clearInputs","clearErrors","handleLogin","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport Home from \"../pages/Home\";\r\nimport LoginScreen from './LoginScreen';\r\nimport firebase from \"firebase\";\r\nimport Login from \"./Login\";\r\n\r\nfunction LoginAndSİgnUpPage() {\r\n\r\n    const [user, setUser]=useState(\" \");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [hasAccount, setHasAccount] = useState(false);\r\n\r\n    useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) =>  //durum değişirse\r\n    {\r\n      if(authUser)//Doluysa siteye giriş yapabil\r\n      {\r\n        setUser(authUser) //giriş yapıldı yani login ekranına yönlendirildi.\r\n      }else //değilse;\r\n      {\r\n        setUser(null) //giriş ekranında bekle\r\n      }\r\n    }) \r\n    }, [])\r\n\r\n  const clearInputs=()=>\r\n  {\r\n    setEmail=\"\";\r\n    setPassword=\"\";\r\n  }\r\n\r\n  const clearErrors=()=>\r\n  {\r\n    setPasswordError=\"\";\r\n    setEmailError=\"\";\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email.password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const handleSignup = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email.password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const handleLogout=()=>\r\n  {\r\n   firebase.auth().signOut();\r\n  }\r\n\r\n\r\n\r\n  const authListener=()=>\r\n  {\r\n    firebase.auth().onAuthStateChanged((user)=>\r\n     {\r\n       if(user)\r\n       {\r\n         clearInputs();\r\n         setUser(user);\r\n       }else\r\n       {\r\n         setUser(\"\");\r\n       }\r\n     })\r\n  }\r\n\r\n  useEffect(()=>\r\n  {\r\n    authListener();\r\n  },[])\r\n\r\n\r\n  /* console.log(user); */\r\n    return (\r\n      <div className=\"app\">\r\n        <Login\r\n        email={email}\r\n        setEmail={setEmail}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        handleLogin={handleLogin}\r\n        handleSignup={handleSignup}\r\n        hasAccount={hasAccount}\r\n        setHasAccount={setHasAccount}\r\n        emailError={emailError}\r\n        passwordError={passwordError} \r\n        />\r\n        {/* {user ? <Home user={user}/> : <LoginScreen />} {/* /*setUser props olarak göndercem*/ }j \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginAndSİgnUpPage;"]},"metadata":{},"sourceType":"module"}