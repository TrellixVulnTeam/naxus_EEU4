{"ast":null,"code":"var _jsxFileName = \"C:\\\\eticaret\\\\naxus\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport database from \"../firebase\";\nimport firebase from \"firebase\";\nimport { Button } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport Users from '../Login/Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  handleLogout\n}) => {\n  _s();\n\n  const [values, setvalues] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [users, setUsers] = useState([]); // useEffect(() => {\n  //   database\n  //     .collection(\"users\")\n  //     .orderBy(\"timestamp\", \"desc\")\n  //     .onSnapshot((snapshop) =>\n  //       setvalues(\n  //         snapshop.docs.map((doc) => ({\n  //           id: doc.id,\n  //           data: doc.data(),\n  //         }))\n  //       )\n  //     );\n  // }, []);\n  //onSnapshot: her satırı tek tek alıyor\n\n  useEffect(() => {\n    //veritabanından verileri çekiyor\n    database.collection(\"users\").onSnapshot(snapshot => setUsers(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []); //boş dizi vermezsem,sürekli döner.\n  // function savetodatabase(value) {\n  //   database.collection(\"users\").add({\n  //     name: value,\n  //     timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  //     surname: \"Aksu\",\n  //   });\n  //   setinput(\"\");\n  // }\n\n  function deletedata(value) {\n    database.collection(\"users\").doc(value).delete();\n  }\n\n  function Editdata(id, value) {\n    database.collection(\"users\").doc(id).set({\n      name: value\n    }, {\n      merge: true\n    });\n  }\n\n  const add = e => {\n    e.preventDefault(); //sayfa yenilenmesin diye uaptık\n\n    database.collection(\"users\").add({\n      name: name,\n      surname: surname,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setName(\"\");\n    setSurname(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Ad :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \"Soyad :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: surname,\n        onChange: e => setSurname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: add,\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(({\n        id,\n        data\n      }) => /*#__PURE__*/_jsxDEV(Users, {\n        id: id,\n        name: data.name,\n        surname: data.surname,\n        guncellenenisim: name,\n        guncellenensoyad: surname,\n        setName: setName,\n        setSurname: setSurname\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      as: NavLink,\n      to: \"KayitOl\",\n      children: \"Kay\\u0131t Ol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogout,\n      children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"2iOZrTClatlHxhlCzEf9nnv7gGY=\");\n\n_c = Home;\nexport default Home; // import { useState } from \"react\";\n// import { Button } from \"semantic-ui-react\";\n// import database from '../firebase';\n// import firebase from \"firebase\";\n// import { useEffect } from \"react\";\n// import Users from '../Login/Users'\n//  function Home() \n//  {\n//   const [name, setName] = useState(\"\");\n//   const [surname, setSurname] = useState(\"\");\n//   const [users, setUsers] = useState([]);\n//   //onSnapshot: her satırı tek tek alıyor\n//   useEffect(() => {\n//     //veritabanından verileri çekiyor\n//     database.collection(\"users\").onSnapshot((snapshot) =>\n//       setUsers(\n//         snapshot.docs.map((doc) => ({\n//           id: doc.id,\n//           data: doc.data(),\n//         }))\n//       )\n//     );\n//   }, []); //boş dizi vermezsem,sürekli döner.\n//   console.log(users);\n//   console.log();\n//   const add = (e) => {\n//     e.preventDefault(); //sayfa yenilenmesin diye uaptık\n//     database.collection(\"users\").add({\n//       name: name,\n//       surname: surname,\n//       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n//     });\n//     setName(\"\");\n//     setSurname(\"\");\n//   };\n//   return (\n//     <div>\n//       <form>\n//          Ad :\n//         <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//           Soyad :\n//         <input\n//           type=\"text\"\n//           value={surname}\n//           onChange={(e) => setSurname(e.target.value)}\n//         />\n//         <Button onClick={add}>Ekle</Button>\n//       </form>\n//       <div>\n//         {users.map(({ id, data }) => (\n//           <Users\n//             key={id}\n//             id={id}\n//             name={data.name}\n//             surname={data.surname}\n//             guncellenenisim={name}\n//             guncellenensoyad={surname}\n//             setName={setName}\n//             setSurname={setSurname}\n//           />\n//         ))}\n//       </div>\n//       {/* <div>\n//         {users.map(({ id, data: { name, surname } }) => (\n//           <Users\n//             key={id}\n//             id={id}\n//             name={name}\n//             surname={surname}\n//             setName={setName}\n//             setSurname={setSurname}\n//           />\n//         ))}\n//       </div> */}\n//       {/* <div>\n//         {users.map((item) => (\n//           <ul>\n//             <li>\n//               {item.data.name} {item.data.surname}\n//             </li>\n//           </ul>\n//         ))}\n//       </div> */}\n//     </div>\n//   );\n// }\n// export default Home();\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/eticaret/naxus/src/pages/Home.jsx"],"names":["React","useState","useEffect","database","firebase","Button","NavLink","Users","Home","handleLogout","values","setvalues","name","setName","surname","setSurname","users","setUsers","collection","onSnapshot","snapshot","docs","map","doc","id","data","deletedata","value","delete","Editdata","set","merge","add","e","preventDefault","timestamp","firestore","FieldValue","serverTimestamp","target"],"mappings":"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AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlCF,eAiDE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAElB,OAAZ;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDF,eAoDA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApDA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA1HD;;GAAMD,I;;KAAAA,I;AA4HN,eAAeA,IAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport database  from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Users from '../Login/Users'\r\n\r\nconst Home= ({handleLogout})=> {\r\n  const [values, setvalues] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   database\r\n  //     .collection(\"users\")\r\n  //     .orderBy(\"timestamp\", \"desc\")\r\n  //     .onSnapshot((snapshop) =>\r\n  //       setvalues(\r\n  //         snapshop.docs.map((doc) => ({\r\n  //           id: doc.id,\r\n  //           data: doc.data(),\r\n  //         }))\r\n  //       )\r\n  //     );\r\n  // }, []);\r\n\r\n   //onSnapshot: her satırı tek tek alıyor\r\n   useEffect(() => {\r\n    //veritabanından verileri çekiyor\r\n    database.collection(\"users\").onSnapshot((snapshot) =>\r\n      setUsers(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n  }, []); //boş dizi vermezsem,sürekli döner.\r\n  // function savetodatabase(value) {\r\n  //   database.collection(\"users\").add({\r\n  //     name: value,\r\n  //     timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n  //     surname: \"Aksu\",\r\n  //   });\r\n  //   setinput(\"\");\r\n  // }\r\n\r\n  function deletedata(value) {\r\n    database.collection(\"users\").doc(value).delete();\r\n  }\r\n\r\n  function Editdata(id,value) {\r\n    database.collection(\"users\").doc(id).set(\r\n      {\r\n        name:value,\r\n\r\n      },{merge:true}\r\n    )\r\n  }\r\n\r\n  const add = (e) => {\r\n    e.preventDefault(); //sayfa yenilenmesin diye uaptık\r\n    database.collection(\"users\").add({\r\n      name: name,\r\n      surname: surname,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setName(\"\");\r\n    setSurname(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>Hoşgeldiniz {user.displayName}</h1> */}\r\n      {/* <button onClick={() => auth.signOut()}>Çıkış Yap </button> */}\r\n      <form>\r\n         Ad :\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n          Soyad :\r\n        <input\r\n          type=\"text\"\r\n          value={surname}\r\n          onChange={(e) => setSurname(e.target.value)}\r\n        />\r\n        <Button onClick={add}>Ekle</Button>\r\n      </form>\r\n      \r\n      {/* <div>\r\n        {values.map((item) => (\r\n          <ul>\r\n            <li>\r\n              {item.data.name}\r\n              {item.data.surname}\r\n              <div>\r\n                <button onClick={() => deletedata(item.id)}>Delete</button>\r\n                <button onClick={() => Editdata(item.id,\"Hiçkimse\")}>Edit</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        ))}\r\n      </div> */}\r\n\r\n      <div>\r\n        {users.map(({ id, data }) => (\r\n          <Users\r\n            key={id}\r\n            id={id}\r\n            name={data.name}\r\n            surname={data.surname}\r\n            guncellenenisim={name}\r\n            guncellenensoyad={surname}\r\n            setName={setName}\r\n            setSurname={setSurname}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <Button as={NavLink} to=\"KayitOl\">\r\n        Kayıt Ol \r\n      </Button>\r\n    <Button onClick={handleLogout}>Çıkış Yap</Button>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { Button } from \"semantic-ui-react\";\r\n// import database from '../firebase';\r\n// import firebase from \"firebase\";\r\n// import { useEffect } from \"react\";\r\n// import Users from '../Login/Users'\r\n\r\n//  function Home() \r\n//  {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [surname, setSurname] = useState(\"\");\r\n//   const [users, setUsers] = useState([]);\r\n//   //onSnapshot: her satırı tek tek alıyor\r\n//   useEffect(() => {\r\n//     //veritabanından verileri çekiyor\r\n//     database.collection(\"users\").onSnapshot((snapshot) =>\r\n//       setUsers(\r\n//         snapshot.docs.map((doc) => ({\r\n//           id: doc.id,\r\n//           data: doc.data(),\r\n//         }))\r\n//       )\r\n//     );\r\n//   }, []); //boş dizi vermezsem,sürekli döner.\r\n\r\n//   console.log(users);\r\n\r\n//   console.log();\r\n//   const add = (e) => {\r\n//     e.preventDefault(); //sayfa yenilenmesin diye uaptık\r\n//     database.collection(\"users\").add({\r\n//       name: name,\r\n//       surname: surname,\r\n//       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n//     });\r\n//     setName(\"\");\r\n//     setSurname(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form>\r\n//          Ad :\r\n//         <input\r\n//           type=\"text\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n//           Soyad :\r\n//         <input\r\n//           type=\"text\"\r\n//           value={surname}\r\n//           onChange={(e) => setSurname(e.target.value)}\r\n//         />\r\n//         <Button onClick={add}>Ekle</Button>\r\n//       </form>\r\n\r\n//       <div>\r\n//         {users.map(({ id, data }) => (\r\n//           <Users\r\n//             key={id}\r\n//             id={id}\r\n//             name={data.name}\r\n//             surname={data.surname}\r\n//             guncellenenisim={name}\r\n//             guncellenensoyad={surname}\r\n//             setName={setName}\r\n//             setSurname={setSurname}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* <div>\r\n//         {users.map(({ id, data: { name, surname } }) => (\r\n//           <Users\r\n//             key={id}\r\n//             id={id}\r\n//             name={name}\r\n//             surname={surname}\r\n//             setName={setName}\r\n//             setSurname={setSurname}\r\n//           />\r\n//         ))}\r\n//       </div> */}\r\n\r\n//       {/* <div>\r\n//         {users.map((item) => (\r\n//           <ul>\r\n//             <li>\r\n//               {item.data.name} {item.data.surname}\r\n//             </li>\r\n//           </ul>\r\n//         ))}\r\n//       </div> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// export default Home();"]},"metadata":{},"sourceType":"module"}